package com.example.farmsim.websocket;

import com.example.farmsim.model.entity.Simulation;
import com.example.farmsim.model.entity.SimulationStatus;
import com.example.farmsim.repository.AgentCommandRepo;
import com.example.farmsim.repository.SimulationRepo;
import com.example.farmsim.service.AgentService;
import com.example.farmsim.service.SimulationService;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.scheduling.annotation.Scheduled;
import org.springframework.stereotype.Component;
import com.example.farmsim.model.entity.AgentCommand;

import java.util.List;

// EnvScheduler.java
@Component
public class EnvScheduler {

    @Autowired
    private SimulationRepo simulationRepo;

    @Autowired
    private SimulationService simulationService; // 注入 SimulationService

    @Autowired
    private AgentCommandRepo agentCommandRepo;

    @Autowired
    private AgentService agentService;

    @Scheduled(fixedRate = 60000) // 每分钟更新一次
    public void updateEnvironment() {
        // 获取所有运行中的模拟
        List<Simulation> runningSimulations = simulationRepo.findByStatus(SimulationStatus.RUNNING);

        for (Simulation sim : runningSimulations) {
            // 获取当前模拟的指令
            List<AgentCommand> commands = agentCommandRepo.findBySimulationId(sim.getId());

            // 调用 SimulationService 处理指令
            simulationService.applyCommandsToEnvironmentAndCrops(commands, sim.getId());
        }
    }

    // src/main/java/com/example/farmsim/websocket/EnvScheduler.java
    @Scheduled(fixedRate = 60000)
    public void autoGenerateDecisions() {
        List<Simulation> runningSimulations = simulationRepo.findByStatus(SimulationStatus.RUNNING);
        for (Simulation sim : runningSimulations) {
            String simulationId = sim.getId();
            // 主动生成决策并执行
            String decision = agentService.generateAutomaticDecision(simulationId);
            System.out.println("自动决策执行结果：" + decision);
        }
    }
}